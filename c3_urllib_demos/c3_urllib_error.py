from urllib import request, error
import socket

"""error module in urllib defines exceptions generated by request module"""
# URLError
try:
    response = request.urlopen("http://ffffFFffffff.com/index.html")  # Not Found
except error.URLError as e:
    print(e.reason)

print('---')

# HTTPError, subclass of URLError
# attributes: code(status code), reason, headers
try:
    response = request.urlopen("http://ffffFFffffff.com/index.html")  # Not Found
except error.HTTPError as e:
    print(e.reason, e.code, e.headers, sep='\n')
print('---')

# Better practice
try:
    response = request.urlopen("http://ffffFFffffff.com/index.html")  # Not Found
except error.HTTPError as e:  # catch subclass exception first
    print(e.reason, "\n", e.code, "\n", e.headers)
except error.URLError as e:  # then catch superclass exception
    print(e.reason)
else:
    print('Request Successfully')
print('---')


# e.reason is not just a string type, maybe a object of some class
try:
    response = request.urlopen('https://www.baidu.com', timeout=0.01)
except error.URLError as e:
    print(type(e.reason))
    if isinstance(e.reason, socket.timeout):
        print("TIME OUT")


